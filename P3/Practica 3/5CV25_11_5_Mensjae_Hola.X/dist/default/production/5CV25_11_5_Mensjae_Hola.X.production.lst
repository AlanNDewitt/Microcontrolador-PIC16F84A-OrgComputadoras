

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed May 25 19:26:58 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F84A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x4E,2
    15  0000                     
    16                           ; Version 2.40
    17                           ; Generated 17/11/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F84A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  0081                     	;# 
    63  0085                     	;# 
    64  0086                     	;# 
    65  0088                     	;# 
    66  0089                     	;# 
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  0081                     	;# 
    79  0085                     	;# 
    80  0086                     	;# 
    81  0088                     	;# 
    82  0089                     	;# 
    83  0006                     _PORTBbits	set	6
    84  0086                     _TRISB	set	134
    85  0086                     _TRISBbits	set	134
    86                           
    87                           	psect	strings
    88  0001                     __pstrings:
    89  0001                     stringtab:
    90  0001                     __stringtab:
    91  0001                     stringcode:	
    92                           ;	String table - string pointers are 1 byte each
    93                           
    94  0001                     stringdir:
    95  0001  3000               	movlw	high stringdir
    96  0002  008A               	movwf	10
    97  0003  0804               	movf	4,w
    98  0004  0A84               	incf	4,f
    99  0005  0782               	addwf	2,f
   100  0006                     __stringbase:
   101  0006  3400               	retlw	0
   102  0007                     __end_of__stringtab:
   103  0007                     STR_1:
   104  0007  3445               	retlw	69	;'E'
   105  0008  3453               	retlw	83	;'S'
   106  0009  3449               	retlw	73	;'I'
   107  000A  344D               	retlw	77	;'M'
   108  000B  3445               	retlw	69	;'E'
   109  000C  3420               	retlw	32	;' '
   110  000D  3443               	retlw	67	;'C'
   111  000E  3455               	retlw	85	;'U'
   112  000F  344C               	retlw	76	;'L'
   113  0010  3448               	retlw	72	;'H'
   114  0011  3455               	retlw	85	;'U'
   115  0012  3441               	retlw	65	;'A'
   116  0013  3443               	retlw	67	;'C'
   117  0014  3441               	retlw	65	;'A'
   118  0015  344E               	retlw	78	;'N'
   119  0016  3400               	retlw	0
   120  0017                     STR_2:
   121  0017  342A               	retlw	42	;'*'
   122  0018  342A               	retlw	42	;'*'
   123  0019  342A               	retlw	42	;'*'
   124  001A  342A               	retlw	42	;'*'
   125  001B  342A               	retlw	42	;'*'
   126  001C  3449               	retlw	73	;'I'
   127  001D  3450               	retlw	80	;'P'
   128  001E  344E               	retlw	78	;'N'
   129  001F  342A               	retlw	42	;'*'
   130  0020  342A               	retlw	42	;'*'
   131  0021  342A               	retlw	42	;'*'
   132  0022  342A               	retlw	42	;'*'
   133  0023  342A               	retlw	42	;'*'
   134  0024  3400               	retlw	0
   135                           
   136                           	psect	cinit
   137  03FE                     start_initialization:	
   138                           ; #config settings
   139                           
   140  03FE                     __initialization:
   141  03FE                     end_of_initialization:	
   142                           ;End of C runtime variable initialization code
   143                           
   144  03FE                     __end_of__initialization:
   145  03FE  0183               	clrf	3
   146  03FF  29A2               	ljmp	_main	;jump to C main() function
   147                           
   148                           	psect	cstackBANK0
   149  000C                     __pcstackBANK0:
   150  000C                     ?_Lcd_Cmd:
   151  000C                     ??_Lcd_Cmd:	
   152                           ; 1 bytes @ 0x0
   153                           
   154  000C                     ?_Lcd_Chr_CP:	
   155                           ; 1 bytes @ 0x0
   156                           
   157  000C                     ??_Lcd_Chr_CP:	
   158                           ; 1 bytes @ 0x0
   159                           
   160  000C                     ?_Lcd_Init:	
   161                           ; 1 bytes @ 0x0
   162                           
   163  000C                     ?_main:	
   164                           ; 1 bytes @ 0x0
   165                           
   166                           
   167                           ; 1 bytes @ 0x0
   168  000C                     	ds	2
   169  000E                     Lcd_Chr_CP@data:
   170  000E                     Lcd_Cmd@data:	
   171                           ; 1 bytes @ 0x2
   172                           
   173                           
   174                           ; 1 bytes @ 0x2
   175  000E                     	ds	1
   176  000F                     ??_Lcd_Init:
   177  000F                     ?_Lcd_Out:	
   178                           ; 1 bytes @ 0x3
   179                           
   180  000F                     Lcd_Out@x:	
   181                           ; 1 bytes @ 0x3
   182                           
   183                           
   184                           ; 1 bytes @ 0x3
   185  000F                     	ds	1
   186  0010                     Lcd_Out@buffer:
   187                           
   188                           ; 1 bytes @ 0x4
   189  0010                     	ds	1
   190  0011                     ??_Lcd_Out:
   191  0011                     Lcd_Init@data:	
   192                           ; 1 bytes @ 0x5
   193                           
   194                           
   195                           ; 1 bytes @ 0x5
   196  0011                     	ds	2
   197  0013                     Lcd_Out@y:
   198                           
   199                           ; 1 bytes @ 0x7
   200  0013                     	ds	1
   201  0014                     Lcd_Out@data:
   202                           
   203                           ; 1 bytes @ 0x8
   204  0014                     	ds	1
   205  0015                     ??_main:
   206                           
   207                           ; 1 bytes @ 0x9
   208  0015                     	ds	3
   209                           
   210                           	psect	maintext
   211  01A2                     __pmaintext:	
   212 ;;
   213 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   214 ;;
   215 ;; *************** function _main *****************
   216 ;; Defined at:
   217 ;;		line 16 in file "main.c"
   218 ;; Parameters:    Size  Location     Type
   219 ;;		None
   220 ;; Auto vars:     Size  Location     Type
   221 ;;		None
   222 ;; Return value:  Size  Location     Type
   223 ;;                  1    wreg      void 
   224 ;; Registers used:
   225 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   226 ;; Tracked objects:
   227 ;;		On entry : B00/0
   228 ;;		On exit  : 0/0
   229 ;;		Unchanged: 0/0
   230 ;; Data sizes:     COMMON   BANK0
   231 ;;      Params:         0       0
   232 ;;      Locals:         0       0
   233 ;;      Temps:          0       3
   234 ;;      Totals:         0       3
   235 ;;Total ram usage:        3 bytes
   236 ;; Hardware stack levels required when called: 2
   237 ;; This function calls:
   238 ;;		_Lcd_Cmd
   239 ;;		_Lcd_Init
   240 ;;		_Lcd_Out
   241 ;; This function is called by:
   242 ;;		Startup code after reset
   243 ;; This function uses a non-reentrant model
   244 ;;
   245                           
   246  01A2                     _main:	
   247                           ;psect for function _main
   248                           
   249  01A2                     l983:	
   250                           ;incstack = 0
   251                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   252                           
   253                           
   254                           ;main.c: 18:     TRISB = 0B00010000;
   255  01A2  3010               	movlw	16
   256  01A3  1683               	bsf	3,5	;RP0=1, select bank1
   257  01A4  0086               	movwf	6	;volatile
   258  01A5                     l985:
   259                           
   260                           ;main.c: 28:     Lcd_Init();
   261  01A5  221C               	fcall	_Lcd_Init
   262  01A6                     l987:
   263                           
   264                           ;main.c: 29:     Lcd_Cmd(1);
   265  01A6  3001               	movlw	1
   266  01A7  22B2               	fcall	_Lcd_Cmd
   267  01A8                     l989:
   268                           
   269                           ;main.c: 30:     Lcd_Cmd(12);
   270  01A8  300C               	movlw	12
   271  01A9  22B2               	fcall	_Lcd_Cmd
   272  01AA                     l991:
   273                           
   274                           ;main.c: 31:     _delay((unsigned long)((100)*(4000000/4000.0)));
   275  01AA  3082               	movlw	130
   276  01AB  1283               	bcf	3,5	;RP0=0, select bank0
   277  01AC  0096               	movwf	??_main+1
   278  01AD  30DD               	movlw	221
   279  01AE  0095               	movwf	??_main
   280  01AF                     u317:
   281  01AF  0B95               	decfsz	??_main,f
   282  01B0  29AF               	goto	u317
   283  01B1  0B96               	decfsz	??_main+1,f
   284  01B2  29AF               	goto	u317
   285  01B3  29B4               	nop2
   286  01B4                     l993:
   287                           
   288                           ;main.c: 37:     {;main.c: 39:         Lcd_Out(1,1,"ESIME CULHUACAN");
   289  01B4  1283               	bcf	3,5	;RP0=0, select bank0
   290  01B5  018F               	clrf	Lcd_Out@x
   291  01B6  0A8F               	incf	Lcd_Out@x,f
   292  01B7  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   293  01B8  0095               	movwf	??_main
   294  01B9  0815               	movf	??_main,w
   295  01BA  0090               	movwf	Lcd_Out@buffer
   296  01BB  3001               	movlw	1
   297  01BC  21D5               	fcall	_Lcd_Out
   298  01BD                     l995:
   299                           
   300                           ;main.c: 40:         Lcd_Out(2,1,"*****IPN*****");
   301  01BD  1283               	bcf	3,5	;RP0=0, select bank0
   302  01BE  018F               	clrf	Lcd_Out@x
   303  01BF  0A8F               	incf	Lcd_Out@x,f
   304  01C0  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   305  01C1  0095               	movwf	??_main
   306  01C2  0815               	movf	??_main,w
   307  01C3  0090               	movwf	Lcd_Out@buffer
   308  01C4  3002               	movlw	2
   309  01C5  21D5               	fcall	_Lcd_Out
   310  01C6                     l997:
   311                           
   312                           ;main.c: 42:          _delay((unsigned long)((300)*(4000000/4000.0)));
   313  01C6  3002               	movlw	2
   314  01C7  1283               	bcf	3,5	;RP0=0, select bank0
   315  01C8  0097               	movwf	??_main+2
   316  01C9  3086               	movlw	134
   317  01CA  0096               	movwf	??_main+1
   318  01CB  3099               	movlw	153
   319  01CC  0095               	movwf	??_main
   320  01CD                     u327:
   321  01CD  0B95               	decfsz	??_main,f
   322  01CE  29CD               	goto	u327
   323  01CF  0B96               	decfsz	??_main+1,f
   324  01D0  29CD               	goto	u327
   325  01D1  0B97               	decfsz	??_main+2,f
   326  01D2  29CD               	goto	u327
   327  01D3  29B4               	goto	l993
   328  01D4  2800               	ljmp	start
   329  01D5                     __end_of_main:
   330                           
   331                           	psect	text1
   332  01D5                     __ptext1:	
   333 ;; *************** function _Lcd_Out *****************
   334 ;; Defined at:
   335 ;;		line 94 in file "./flex-lcd.h"
   336 ;; Parameters:    Size  Location     Type
   337 ;;  y               1    wreg     unsigned char 
   338 ;;  x               1    3[BANK0 ] unsigned char 
   339 ;;  buffer          1    4[BANK0 ] PTR const unsigned char 
   340 ;;		 -> STR_2(14), STR_1(16), 
   341 ;; Auto vars:     Size  Location     Type
   342 ;;  y               1    7[BANK0 ] unsigned char 
   343 ;;  data            1    8[BANK0 ] unsigned char 
   344 ;; Return value:  Size  Location     Type
   345 ;;                  1    wreg      void 
   346 ;; Registers used:
   347 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   348 ;; Tracked objects:
   349 ;;		On entry : 0/0
   350 ;;		On exit  : 0/0
   351 ;;		Unchanged: 0/0
   352 ;; Data sizes:     COMMON   BANK0
   353 ;;      Params:         0       2
   354 ;;      Locals:         0       2
   355 ;;      Temps:          0       2
   356 ;;      Totals:         0       6
   357 ;;Total ram usage:        6 bytes
   358 ;; Hardware stack levels used: 1
   359 ;; Hardware stack levels required when called: 1
   360 ;; This function calls:
   361 ;;		_Lcd_Chr_CP
   362 ;;		_Lcd_Cmd
   363 ;; This function is called by:
   364 ;;		_main
   365 ;; This function uses a non-reentrant model
   366 ;;
   367                           
   368  01D5                     _Lcd_Out:	
   369                           ;psect for function _Lcd_Out
   370                           
   371                           
   372                           ;incstack = 0
   373                           ; Regs used in _Lcd_Out: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   374                           ;Lcd_Out@y stored from wreg
   375  01D5  1283               	bcf	3,5	;RP0=0, select bank0
   376  01D6  0093               	movwf	Lcd_Out@y
   377  01D7                     l927:
   378                           
   379                           ;./flex-lcd.h: 94: void Lcd_Out(unsigned char y, unsigned char x, const char *buffer);./
      +                          flex-lcd.h: 95: {;./flex-lcd.h: 96: unsigned char data;;./flex-lcd.h: 97: switch (y)
   380  01D7  29F0               	goto	l939
   381  01D8                     l929:
   382  01D8  080F               	movf	Lcd_Out@x,w
   383  01D9  3E80               	addlw	128
   384  01DA  0091               	movwf	??_Lcd_Out
   385  01DB  0811               	movf	??_Lcd_Out,w
   386  01DC  0094               	movwf	Lcd_Out@data
   387  01DD  2A06               	goto	l941
   388  01DE                     l931:
   389  01DE  080F               	movf	Lcd_Out@x,w
   390  01DF  3EC0               	addlw	192
   391  01E0  0091               	movwf	??_Lcd_Out
   392  01E1  0811               	movf	??_Lcd_Out,w
   393  01E2  0094               	movwf	Lcd_Out@data
   394  01E3  2A06               	goto	l941
   395  01E4                     l933:
   396  01E4  080F               	movf	Lcd_Out@x,w
   397  01E5  3E94               	addlw	148
   398  01E6  0091               	movwf	??_Lcd_Out
   399  01E7  0811               	movf	??_Lcd_Out,w
   400  01E8  0094               	movwf	Lcd_Out@data
   401  01E9  2A06               	goto	l941
   402  01EA                     l935:
   403  01EA  080F               	movf	Lcd_Out@x,w
   404  01EB  3ED4               	addlw	212
   405  01EC  0091               	movwf	??_Lcd_Out
   406  01ED  0811               	movf	??_Lcd_Out,w
   407  01EE  0094               	movwf	Lcd_Out@data
   408  01EF  2A06               	goto	l941
   409  01F0                     l939:
   410  01F0  0813               	movf	Lcd_Out@y,w
   411  01F1  0091               	movwf	??_Lcd_Out
   412  01F2  0192               	clrf	??_Lcd_Out+1
   413                           
   414                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   415                           ; Switch size 1, requested type "simple"
   416                           ; Number of cases is 1, Range of values is 0 to 0
   417                           ; switch strategies available:
   418                           ; Name         Instructions Cycles
   419                           ; simple_byte            4     3 (average)
   420                           ; direct_byte            7     6 (fixed)
   421                           ; jumptable            260     6 (fixed)
   422                           ;	Chosen strategy is simple_byte
   423  01F3  0812               	movf	??_Lcd_Out+1,w
   424  01F4  3A00               	xorlw	0	; case 0
   425  01F5  1903               	skipnz
   426  01F6  29F8               	goto	l1029
   427  01F7  2A06               	goto	l941
   428  01F8                     l1029:
   429                           
   430                           ; Switch size 1, requested type "simple"
   431                           ; Number of cases is 4, Range of values is 1 to 4
   432                           ; switch strategies available:
   433                           ; Name         Instructions Cycles
   434                           ; simple_byte           13     7 (average)
   435                           ; direct_byte           13     9 (fixed)
   436                           ; jumptable            263     9 (fixed)
   437                           ;	Chosen strategy is simple_byte
   438  01F8  0811               	movf	??_Lcd_Out,w
   439  01F9  3A01               	xorlw	1	; case 1
   440  01FA  1903               	skipnz
   441  01FB  29D8               	goto	l929
   442  01FC  3A03               	xorlw	3	; case 2
   443  01FD  1903               	skipnz
   444  01FE  29DE               	goto	l931
   445  01FF  3A01               	xorlw	1	; case 3
   446  0200  1903               	skipnz
   447  0201  29E4               	goto	l933
   448  0202  3A07               	xorlw	7	; case 4
   449  0203  1903               	skipnz
   450  0204  29EA               	goto	l935
   451  0205  2A06               	goto	l941
   452  0206                     l941:
   453                           
   454                           ;./flex-lcd.h: 105: Lcd_Cmd(data);
   455  0206  0814               	movf	Lcd_Out@data,w
   456  0207  22B2               	fcall	_Lcd_Cmd
   457                           
   458                           ;./flex-lcd.h: 106: while(*buffer)
   459  0208  2A12               	goto	l947
   460  0209                     l943:
   461                           
   462                           ;./flex-lcd.h: 107: {;./flex-lcd.h: 108:     Lcd_Chr_CP(*buffer);
   463  0209  0810               	movf	Lcd_Out@buffer,w
   464  020A  0084               	movwf	4
   465  020B  2001               	fcall	stringdir
   466  020C  2356               	fcall	_Lcd_Chr_CP
   467  020D                     l945:
   468                           
   469                           ;./flex-lcd.h: 109:     buffer++;
   470  020D  3001               	movlw	1
   471  020E  1283               	bcf	3,5	;RP0=0, select bank0
   472  020F  0091               	movwf	??_Lcd_Out
   473  0210  0811               	movf	??_Lcd_Out,w
   474  0211  0790               	addwf	Lcd_Out@buffer,f
   475  0212                     l947:
   476                           
   477                           ;./flex-lcd.h: 106: while(*buffer)
   478  0212  1283               	bcf	3,5	;RP0=0, select bank0
   479  0213  0810               	movf	Lcd_Out@buffer,w
   480  0214  0084               	movwf	4
   481  0215  2001               	fcall	stringdir
   482  0216  3A00               	xorlw	0
   483  0217  1D03               	skipz
   484  0218  2A1A               	goto	u291
   485  0219  2A1B               	goto	u290
   486  021A                     u291:
   487  021A  2A09               	goto	l943
   488  021B                     u290:
   489  021B                     l30:
   490  021B  0008               	return
   491  021C                     __end_of_Lcd_Out:
   492                           
   493                           	psect	text2
   494  0356                     __ptext2:	
   495 ;; *************** function _Lcd_Chr_CP *****************
   496 ;; Defined at:
   497 ;;		line 136 in file "./flex-lcd.h"
   498 ;; Parameters:    Size  Location     Type
   499 ;;  data            1    wreg     unsigned char 
   500 ;; Auto vars:     Size  Location     Type
   501 ;;  data            1    2[BANK0 ] unsigned char 
   502 ;; Return value:  Size  Location     Type
   503 ;;                  1    wreg      void 
   504 ;; Registers used:
   505 ;;		wreg, status,2, status,0
   506 ;; Tracked objects:
   507 ;;		On entry : 0/0
   508 ;;		On exit  : 0/0
   509 ;;		Unchanged: 0/0
   510 ;; Data sizes:     COMMON   BANK0
   511 ;;      Params:         0       0
   512 ;;      Locals:         0       1
   513 ;;      Temps:          0       2
   514 ;;      Totals:         0       3
   515 ;;Total ram usage:        3 bytes
   516 ;; Hardware stack levels used: 1
   517 ;; This function calls:
   518 ;;		Nothing
   519 ;; This function is called by:
   520 ;;		_Lcd_Out
   521 ;;		_Lcd_Out2
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525  0356                     _Lcd_Chr_CP:	
   526                           ;psect for function _Lcd_Chr_CP
   527                           
   528                           
   529                           ;incstack = 0
   530                           ; Regs used in _Lcd_Chr_CP: [wreg+status,2+status,0]
   531                           ;Lcd_Chr_CP@data stored from wreg
   532  0356  1283               	bcf	3,5	;RP0=0, select bank0
   533  0357  008E               	movwf	Lcd_Chr_CP@data
   534  0358                     l869:
   535                           
   536                           ;./flex-lcd.h: 137: PORTBbits.RB7 = 0; PORTBbits.RB0 = 1;
   537  0358  1386               	bcf	6,7	;volatile
   538  0359  1406               	bsf	6,0	;volatile
   539  035A                     l871:
   540                           
   541                           ;./flex-lcd.h: 138: PORTBbits.RB4 = (data & 0b10000000)>>7; PORTBbits.RB3 = (data & 0b01
      +                          000000)>>6;
   542  035A  080E               	movf	Lcd_Chr_CP@data,w
   543  035B  008C               	movwf	??_Lcd_Chr_CP
   544  035C  3007               	movlw	7
   545  035D                     u225:
   546  035D  1003               	clrc
   547  035E  0C8C               	rrf	??_Lcd_Chr_CP,f
   548  035F  3EFF               	addlw	-1
   549  0360  1D03               	skipz
   550  0361  2B5D               	goto	u225
   551  0362  080C               	movf	??_Lcd_Chr_CP,w
   552  0363  3901               	andlw	1
   553  0364  008D               	movwf	??_Lcd_Chr_CP+1
   554  0365  0E8D               	swapf	??_Lcd_Chr_CP+1,f
   555  0366  0806               	movf	6,w	;volatile
   556  0367  060D               	xorwf	??_Lcd_Chr_CP+1,w
   557  0368  39EF               	andlw	-17
   558  0369  060D               	xorwf	??_Lcd_Chr_CP+1,w
   559  036A  0086               	movwf	6	;volatile
   560  036B  080E               	movf	Lcd_Chr_CP@data,w
   561  036C  008C               	movwf	??_Lcd_Chr_CP
   562  036D  3006               	movlw	6
   563  036E                     u235:
   564  036E  1003               	clrc
   565  036F  0C8C               	rrf	??_Lcd_Chr_CP,f
   566  0370  3EFF               	addlw	-1
   567  0371  1D03               	skipz
   568  0372  2B6E               	goto	u235
   569  0373  080C               	movf	??_Lcd_Chr_CP,w
   570  0374  3901               	andlw	1
   571  0375  008D               	movwf	??_Lcd_Chr_CP+1
   572  0376  0D8D               	rlf	??_Lcd_Chr_CP+1,f
   573  0377  0D8D               	rlf	??_Lcd_Chr_CP+1,f
   574  0378  0D8D               	rlf	??_Lcd_Chr_CP+1,f
   575  0379  0806               	movf	6,w	;volatile
   576  037A  060D               	xorwf	??_Lcd_Chr_CP+1,w
   577  037B  39F7               	andlw	-9
   578  037C  060D               	xorwf	??_Lcd_Chr_CP+1,w
   579  037D  0086               	movwf	6	;volatile
   580                           
   581                           ;./flex-lcd.h: 139: PORTBbits.RB2 = (data & 0b00100000)>>5; PORTBbits.RB1 = (data & 0b00
      +                          010000)>>4;
   582  037E  080E               	movf	Lcd_Chr_CP@data,w
   583  037F  008C               	movwf	??_Lcd_Chr_CP
   584  0380  3005               	movlw	5
   585  0381                     u245:
   586  0381  1003               	clrc
   587  0382  0C8C               	rrf	??_Lcd_Chr_CP,f
   588  0383  3EFF               	addlw	-1
   589  0384  1D03               	skipz
   590  0385  2B81               	goto	u245
   591  0386  080C               	movf	??_Lcd_Chr_CP,w
   592  0387  3901               	andlw	1
   593  0388  008D               	movwf	??_Lcd_Chr_CP+1
   594  0389  0D8D               	rlf	??_Lcd_Chr_CP+1,f
   595  038A  0D8D               	rlf	??_Lcd_Chr_CP+1,f
   596  038B  0806               	movf	6,w	;volatile
   597  038C  060D               	xorwf	??_Lcd_Chr_CP+1,w
   598  038D  39FB               	andlw	-5
   599  038E  060D               	xorwf	??_Lcd_Chr_CP+1,w
   600  038F  0086               	movwf	6	;volatile
   601  0390  080E               	movf	Lcd_Chr_CP@data,w
   602  0391  008C               	movwf	??_Lcd_Chr_CP
   603  0392  3004               	movlw	4
   604  0393                     u255:
   605  0393  1003               	clrc
   606  0394  0C8C               	rrf	??_Lcd_Chr_CP,f
   607  0395  3EFF               	addlw	-1
   608  0396  1D03               	skipz
   609  0397  2B93               	goto	u255
   610  0398  080C               	movf	??_Lcd_Chr_CP,w
   611  0399  3901               	andlw	1
   612  039A  008D               	movwf	??_Lcd_Chr_CP+1
   613  039B  0D8D               	rlf	??_Lcd_Chr_CP+1,f
   614  039C  0806               	movf	6,w	;volatile
   615  039D  060D               	xorwf	??_Lcd_Chr_CP+1,w
   616  039E  39FD               	andlw	-3
   617  039F  060D               	xorwf	??_Lcd_Chr_CP+1,w
   618  03A0  0086               	movwf	6	;volatile
   619  03A1                     l873:
   620                           
   621                           ;./flex-lcd.h: 140: _delay(10);
   622  03A1  3003               	movlw	3
   623  03A2  008C               	movwf	??_Lcd_Chr_CP
   624  03A3                     u337:
   625  03A3  0B8C               	decfsz	??_Lcd_Chr_CP,f
   626  03A4  2BA3               	goto	u337
   627  03A5                     l875:
   628                           
   629                           ;./flex-lcd.h: 141: PORTBbits.RB7 = 1; _delay((unsigned long)((5)*(4000000/4000000.0)));
      +                           PORTBbits.RB7 = 0;
   630  03A5  1283               	bcf	3,5	;RP0=0, select bank0
   631  03A6  1786               	bsf	6,7	;volatile
   632  03A7                     l877:
   633  03A7  2BA8               	nop2	;2 cycle nop
   634  03A8  2BA9               	nop2	;2 cycle nop
   635  03A9  0000               	nop
   636  03AA                     l879:
   637  03AA  1283               	bcf	3,5	;RP0=0, select bank0
   638  03AB  1386               	bcf	6,7	;volatile
   639  03AC                     l881:
   640                           
   641                           ;./flex-lcd.h: 142: PORTBbits.RB4 = (data & 0b00001000)>>3; PORTBbits.RB3 = (data & 0b00
      +                          000100)>>2;
   642  03AC  080E               	movf	Lcd_Chr_CP@data,w
   643  03AD  008C               	movwf	??_Lcd_Chr_CP
   644  03AE  3003               	movlw	3
   645  03AF                     u265:
   646  03AF  1003               	clrc
   647  03B0  0C8C               	rrf	??_Lcd_Chr_CP,f
   648  03B1  3EFF               	addlw	-1
   649  03B2  1D03               	skipz
   650  03B3  2BAF               	goto	u265
   651  03B4  080C               	movf	??_Lcd_Chr_CP,w
   652  03B5  3901               	andlw	1
   653  03B6  008D               	movwf	??_Lcd_Chr_CP+1
   654  03B7  0E8D               	swapf	??_Lcd_Chr_CP+1,f
   655  03B8  0806               	movf	6,w	;volatile
   656  03B9  060D               	xorwf	??_Lcd_Chr_CP+1,w
   657  03BA  39EF               	andlw	-17
   658  03BB  060D               	xorwf	??_Lcd_Chr_CP+1,w
   659  03BC  0086               	movwf	6	;volatile
   660  03BD                     l883:
   661  03BD  080E               	movf	Lcd_Chr_CP@data,w
   662  03BE  008C               	movwf	??_Lcd_Chr_CP
   663  03BF  3002               	movlw	2
   664  03C0                     u275:
   665  03C0  1003               	clrc
   666  03C1  0C8C               	rrf	??_Lcd_Chr_CP,f
   667  03C2  3EFF               	addlw	-1
   668  03C3  1D03               	skipz
   669  03C4  2BC0               	goto	u275
   670  03C5  080C               	movf	??_Lcd_Chr_CP,w
   671  03C6  3901               	andlw	1
   672  03C7  008D               	movwf	??_Lcd_Chr_CP+1
   673  03C8  0D8D               	rlf	??_Lcd_Chr_CP+1,f
   674  03C9  0D8D               	rlf	??_Lcd_Chr_CP+1,f
   675  03CA  0D8D               	rlf	??_Lcd_Chr_CP+1,f
   676  03CB  0806               	movf	6,w	;volatile
   677  03CC  060D               	xorwf	??_Lcd_Chr_CP+1,w
   678  03CD  39F7               	andlw	-9
   679  03CE  060D               	xorwf	??_Lcd_Chr_CP+1,w
   680  03CF  0086               	movwf	6	;volatile
   681  03D0                     l885:
   682                           
   683                           ;./flex-lcd.h: 143: PORTBbits.RB2 = (data & 0b00000010)>>1; PORTBbits.RB1 = (data & 0b00
      +                          000001);
   684  03D0  080E               	movf	Lcd_Chr_CP@data,w
   685  03D1  008C               	movwf	??_Lcd_Chr_CP
   686  03D2  1003               	clrc
   687  03D3  0C0C               	rrf	??_Lcd_Chr_CP,w
   688  03D4  3901               	andlw	1
   689  03D5  008D               	movwf	??_Lcd_Chr_CP+1
   690  03D6  0D8D               	rlf	??_Lcd_Chr_CP+1,f
   691  03D7  0D8D               	rlf	??_Lcd_Chr_CP+1,f
   692  03D8  0806               	movf	6,w	;volatile
   693  03D9  060D               	xorwf	??_Lcd_Chr_CP+1,w
   694  03DA  39FB               	andlw	-5
   695  03DB  060D               	xorwf	??_Lcd_Chr_CP+1,w
   696  03DC  0086               	movwf	6	;volatile
   697  03DD                     l887:
   698  03DD  080E               	movf	Lcd_Chr_CP@data,w
   699  03DE  3901               	andlw	1
   700  03DF  008C               	movwf	??_Lcd_Chr_CP
   701  03E0  0D8C               	rlf	??_Lcd_Chr_CP,f
   702  03E1  0806               	movf	6,w	;volatile
   703  03E2  060C               	xorwf	??_Lcd_Chr_CP,w
   704  03E3  39FD               	andlw	-3
   705  03E4  060C               	xorwf	??_Lcd_Chr_CP,w
   706  03E5  0086               	movwf	6	;volatile
   707  03E6                     l889:
   708                           
   709                           ;./flex-lcd.h: 144: _delay(10);
   710  03E6  3003               	movlw	3
   711  03E7  008C               	movwf	??_Lcd_Chr_CP
   712  03E8                     u347:
   713  03E8  0B8C               	decfsz	??_Lcd_Chr_CP,f
   714  03E9  2BE8               	goto	u347
   715  03EA                     l891:
   716                           
   717                           ;./flex-lcd.h: 145: PORTBbits.RB7 = 1; _delay((unsigned long)((5)*(4000000/4000000.0)));
      +                           PORTBbits.RB7 = 0;
   718  03EA  1283               	bcf	3,5	;RP0=0, select bank0
   719  03EB  1786               	bsf	6,7	;volatile
   720  03EC                     l893:
   721  03EC  2BED               	nop2	;2 cycle nop
   722  03ED  2BEE               	nop2	;2 cycle nop
   723  03EE  0000               	nop
   724  03EF                     l895:
   725  03EF  1283               	bcf	3,5	;RP0=0, select bank0
   726  03F0  1386               	bcf	6,7	;volatile
   727  03F1                     l897:
   728                           
   729                           ;./flex-lcd.h: 146: _delay((unsigned long)((5)*(4000000/4000000.0))); _delay((unsigned l
      +                          ong)((5500)*(4000000/4000000.0)));
   730  03F1  2BF2               	nop2	;2 cycle nop
   731  03F2  2BF3               	nop2	;2 cycle nop
   732  03F3  0000               	nop
   733  03F4                     l899:
   734  03F4  3008               	movlw	8
   735  03F5  1283               	bcf	3,5	;RP0=0, select bank0
   736  03F6  008D               	movwf	??_Lcd_Chr_CP+1
   737  03F7  3023               	movlw	35
   738  03F8  008C               	movwf	??_Lcd_Chr_CP
   739  03F9                     u357:
   740  03F9  0B8C               	decfsz	??_Lcd_Chr_CP,f
   741  03FA  2BF9               	goto	u357
   742  03FB  0B8D               	decfsz	??_Lcd_Chr_CP+1,f
   743  03FC  2BF9               	goto	u357
   744  03FD                     l46:
   745  03FD  0008               	return
   746  03FE                     __end_of_Lcd_Chr_CP:
   747                           
   748                           	psect	text3
   749  021C                     __ptext3:	
   750 ;; *************** function _Lcd_Init *****************
   751 ;; Defined at:
   752 ;;		line 52 in file "./flex-lcd.h"
   753 ;; Parameters:    Size  Location     Type
   754 ;;		None
   755 ;; Auto vars:     Size  Location     Type
   756 ;;  data            1    5[BANK0 ] unsigned char 
   757 ;; Return value:  Size  Location     Type
   758 ;;                  1    wreg      void 
   759 ;; Registers used:
   760 ;;		wreg, status,2, status,0, pclath, cstack
   761 ;; Tracked objects:
   762 ;;		On entry : 0/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMMON   BANK0
   766 ;;      Params:         0       0
   767 ;;      Locals:         0       1
   768 ;;      Temps:          0       2
   769 ;;      Totals:         0       3
   770 ;;Total ram usage:        3 bytes
   771 ;; Hardware stack levels used: 1
   772 ;; Hardware stack levels required when called: 1
   773 ;; This function calls:
   774 ;;		_Lcd_Cmd
   775 ;; This function is called by:
   776 ;;		_main
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780  021C                     _Lcd_Init:	
   781                           ;psect for function _Lcd_Init
   782                           
   783  021C                     l901:	
   784                           ;incstack = 0
   785                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
   786                           
   787                           
   788                           ;./flex-lcd.h: 53: unsigned char data;;./flex-lcd.h: 54: TRISBbits.TRISB4 = 0;
   789  021C  1683               	bsf	3,5	;RP0=1, select bank1
   790  021D  1206               	bcf	6,4	;volatile
   791                           
   792                           ;./flex-lcd.h: 55: TRISBbits.TRISB3 = 0;
   793  021E  1186               	bcf	6,3	;volatile
   794                           
   795                           ;./flex-lcd.h: 56: TRISBbits.TRISB2 = 0;
   796  021F  1106               	bcf	6,2	;volatile
   797                           
   798                           ;./flex-lcd.h: 57: TRISBbits.TRISB1 = 0;
   799  0220  1086               	bcf	6,1	;volatile
   800                           
   801                           ;./flex-lcd.h: 58: TRISBbits.TRISB7 = 0;
   802  0221  1386               	bcf	6,7	;volatile
   803                           
   804                           ;./flex-lcd.h: 59: TRISBbits.TRISB0 = 0;
   805  0222  1006               	bcf	6,0	;volatile
   806                           
   807                           ;./flex-lcd.h: 60: PORTBbits.RB4 = 0;
   808  0223  1283               	bcf	3,5	;RP0=0, select bank0
   809  0224  1206               	bcf	6,4	;volatile
   810                           
   811                           ;./flex-lcd.h: 61: PORTBbits.RB3 = 0;
   812  0225  1186               	bcf	6,3	;volatile
   813                           
   814                           ;./flex-lcd.h: 62: PORTBbits.RB2 = 0;
   815  0226  1106               	bcf	6,2	;volatile
   816                           
   817                           ;./flex-lcd.h: 63: PORTBbits.RB1 = 0;
   818  0227  1086               	bcf	6,1	;volatile
   819                           
   820                           ;./flex-lcd.h: 64: PORTBbits.RB7 = 0;
   821  0228  1386               	bcf	6,7	;volatile
   822                           
   823                           ;./flex-lcd.h: 65: PORTBbits.RB0 = 0;
   824  0229  1006               	bcf	6,0	;volatile
   825  022A                     l903:
   826                           
   827                           ;./flex-lcd.h: 66: _delay((unsigned long)((5500)*(4000000/4000000.0)));
   828  022A  3008               	movlw	8
   829  022B  0090               	movwf	??_Lcd_Init+1
   830  022C  3023               	movlw	35
   831  022D  008F               	movwf	??_Lcd_Init
   832  022E                     u367:
   833  022E  0B8F               	decfsz	??_Lcd_Init,f
   834  022F  2A2E               	goto	u367
   835  0230  0B90               	decfsz	??_Lcd_Init+1,f
   836  0231  2A2E               	goto	u367
   837                           
   838                           ;./flex-lcd.h: 67: _delay((unsigned long)((5500)*(4000000/4000000.0)));
   839  0232  3008               	movlw	8
   840  0233  1283               	bcf	3,5	;RP0=0, select bank0
   841  0234  0090               	movwf	??_Lcd_Init+1
   842  0235  3023               	movlw	35
   843  0236  008F               	movwf	??_Lcd_Init
   844  0237                     u377:
   845  0237  0B8F               	decfsz	??_Lcd_Init,f
   846  0238  2A37               	goto	u377
   847  0239  0B90               	decfsz	??_Lcd_Init+1,f
   848  023A  2A37               	goto	u377
   849                           
   850                           ;./flex-lcd.h: 68: _delay((unsigned long)((5500)*(4000000/4000000.0)));
   851  023B  3008               	movlw	8
   852  023C  1283               	bcf	3,5	;RP0=0, select bank0
   853  023D  0090               	movwf	??_Lcd_Init+1
   854  023E  3023               	movlw	35
   855  023F  008F               	movwf	??_Lcd_Init
   856  0240                     u387:
   857  0240  0B8F               	decfsz	??_Lcd_Init,f
   858  0241  2A40               	goto	u387
   859  0242  0B90               	decfsz	??_Lcd_Init+1,f
   860  0243  2A40               	goto	u387
   861                           
   862                           ;./flex-lcd.h: 69: _delay((unsigned long)((5500)*(4000000/4000000.0)));
   863  0244  3008               	movlw	8
   864  0245  1283               	bcf	3,5	;RP0=0, select bank0
   865  0246  0090               	movwf	??_Lcd_Init+1
   866  0247  3023               	movlw	35
   867  0248  008F               	movwf	??_Lcd_Init
   868  0249                     u397:
   869  0249  0B8F               	decfsz	??_Lcd_Init,f
   870  024A  2A49               	goto	u397
   871  024B  0B90               	decfsz	??_Lcd_Init+1,f
   872  024C  2A49               	goto	u397
   873                           
   874                           ;./flex-lcd.h: 70: _delay((unsigned long)((5500)*(4000000/4000000.0)));
   875  024D  3008               	movlw	8
   876  024E  1283               	bcf	3,5	;RP0=0, select bank0
   877  024F  0090               	movwf	??_Lcd_Init+1
   878  0250  3023               	movlw	35
   879  0251  008F               	movwf	??_Lcd_Init
   880  0252                     u407:
   881  0252  0B8F               	decfsz	??_Lcd_Init,f
   882  0253  2A52               	goto	u407
   883  0254  0B90               	decfsz	??_Lcd_Init+1,f
   884  0255  2A52               	goto	u407
   885                           
   886                           ;./flex-lcd.h: 71: _delay((unsigned long)((5500)*(4000000/4000000.0)));
   887  0256  3008               	movlw	8
   888  0257  1283               	bcf	3,5	;RP0=0, select bank0
   889  0258  0090               	movwf	??_Lcd_Init+1
   890  0259  3023               	movlw	35
   891  025A  008F               	movwf	??_Lcd_Init
   892  025B                     u417:
   893  025B  0B8F               	decfsz	??_Lcd_Init,f
   894  025C  2A5B               	goto	u417
   895  025D  0B90               	decfsz	??_Lcd_Init+1,f
   896  025E  2A5B               	goto	u417
   897  025F                     l905:
   898                           
   899                           ;./flex-lcd.h: 72: for(data = 1; data < 4; data ++)
   900  025F  1283               	bcf	3,5	;RP0=0, select bank0
   901  0260  0191               	clrf	Lcd_Init@data
   902  0261  0A91               	incf	Lcd_Init@data,f
   903  0262                     l15:
   904                           
   905                           ;./flex-lcd.h: 73: {;./flex-lcd.h: 74:     PORTBbits.RB4 = 0; PORTBbits.RB3 = 0; PORTBbi
      +                          ts.RB2 = 1; PORTBbits.RB1 = 1; PORTBbits.RB7 = 0;
   906  0262  1206               	bcf	6,4	;volatile
   907  0263  1186               	bcf	6,3	;volatile
   908  0264  1506               	bsf	6,2	;volatile
   909  0265  1486               	bsf	6,1	;volatile
   910  0266  1386               	bcf	6,7	;volatile
   911                           
   912                           ;./flex-lcd.h: 75:     PORTBbits.RB0 = 0; PORTBbits.RB4 = 0; PORTBbits.RB3 = 0; PORTBbit
      +                          s.RB2 = 1; PORTBbits.RB1 = 1;
   913  0267  1006               	bcf	6,0	;volatile
   914  0268  1206               	bcf	6,4	;volatile
   915  0269  1186               	bcf	6,3	;volatile
   916  026A  1506               	bsf	6,2	;volatile
   917  026B  1486               	bsf	6,1	;volatile
   918                           
   919                           ;./flex-lcd.h: 76:     PORTBbits.RB7 = 1; PORTBbits.RB0 = 0;
   920  026C  1786               	bsf	6,7	;volatile
   921  026D  1006               	bcf	6,0	;volatile
   922                           
   923                           ;./flex-lcd.h: 77:     _delay((unsigned long)((5)*(4000000/4000000.0)));
   924  026E  2A6F               	nop2	;2 cycle nop
   925  026F  2A70               	nop2	;2 cycle nop
   926  0270  0000               	nop
   927                           
   928                           ;./flex-lcd.h: 78:     PORTBbits.RB4 = 0; PORTBbits.RB3 = 0; PORTBbits.RB2 = 1; PORTBbit
      +                          s.RB1 = 1; PORTBbits.RB7 = 0;
   929  0271  1283               	bcf	3,5	;RP0=0, select bank0
   930  0272  1206               	bcf	6,4	;volatile
   931  0273  1186               	bcf	6,3	;volatile
   932  0274  1506               	bsf	6,2	;volatile
   933  0275  1486               	bsf	6,1	;volatile
   934  0276  1386               	bcf	6,7	;volatile
   935                           
   936                           ;./flex-lcd.h: 79:     PORTBbits.RB0 = 0;
   937  0277  1006               	bcf	6,0	;volatile
   938  0278                     l909:
   939                           
   940                           ;./flex-lcd.h: 80:     _delay((unsigned long)((5500)*(4000000/4000000.0)));
   941  0278  3008               	movlw	8
   942  0279  0090               	movwf	??_Lcd_Init+1
   943  027A  3023               	movlw	35
   944  027B  008F               	movwf	??_Lcd_Init
   945  027C                     u427:
   946  027C  0B8F               	decfsz	??_Lcd_Init,f
   947  027D  2A7C               	goto	u427
   948  027E  0B90               	decfsz	??_Lcd_Init+1,f
   949  027F  2A7C               	goto	u427
   950  0280                     l911:
   951                           
   952                           ;./flex-lcd.h: 81: }
   953  0280  3001               	movlw	1
   954  0281  1283               	bcf	3,5	;RP0=0, select bank0
   955  0282  008F               	movwf	??_Lcd_Init
   956  0283  080F               	movf	??_Lcd_Init,w
   957  0284  0791               	addwf	Lcd_Init@data,f
   958  0285                     l913:
   959  0285  3004               	movlw	4
   960  0286  0211               	subwf	Lcd_Init@data,w
   961  0287  1C03               	skipc
   962  0288  2A8A               	goto	u281
   963  0289  2A8B               	goto	u280
   964  028A                     u281:
   965  028A  2A62               	goto	l15
   966  028B                     u280:
   967  028B                     l16:
   968                           
   969                           ;./flex-lcd.h: 82: PORTBbits.RB4 = 0; PORTBbits.RB3 = 0; PORTBbits.RB2 = 1; PORTBbits.RB
      +                          1 = 0; PORTBbits.RB7 = 0; PORTBbits.RB0 = 0;
   970  028B  1206               	bcf	6,4	;volatile
   971  028C  1186               	bcf	6,3	;volatile
   972  028D  1506               	bsf	6,2	;volatile
   973  028E  1086               	bcf	6,1	;volatile
   974  028F  1386               	bcf	6,7	;volatile
   975  0290  1006               	bcf	6,0	;volatile
   976                           
   977                           ;./flex-lcd.h: 83: PORTBbits.RB4 = 0; PORTBbits.RB3 = 0; PORTBbits.RB2 = 1; PORTBbits.RB
      +                          1 = 0; PORTBbits.RB7 = 1; PORTBbits.RB0 = 0;
   978  0291  1206               	bcf	6,4	;volatile
   979  0292  1186               	bcf	6,3	;volatile
   980  0293  1506               	bsf	6,2	;volatile
   981  0294  1086               	bcf	6,1	;volatile
   982  0295  1786               	bsf	6,7	;volatile
   983  0296  1006               	bcf	6,0	;volatile
   984                           
   985                           ;./flex-lcd.h: 84: _delay((unsigned long)((5)*(4000000/4000000.0)));
   986  0297  2A98               	nop2	;2 cycle nop
   987  0298  2A99               	nop2	;2 cycle nop
   988  0299  0000               	nop
   989                           
   990                           ;./flex-lcd.h: 85: PORTBbits.RB4 = 0; PORTBbits.RB3 = 0; PORTBbits.RB2 = 1; PORTBbits.RB
      +                          1 = 0; PORTBbits.RB7 = 0; PORTBbits.RB0 = 0;
   991  029A  1283               	bcf	3,5	;RP0=0, select bank0
   992  029B  1206               	bcf	6,4	;volatile
   993  029C  1186               	bcf	6,3	;volatile
   994  029D  1506               	bsf	6,2	;volatile
   995  029E  1086               	bcf	6,1	;volatile
   996  029F  1386               	bcf	6,7	;volatile
   997  02A0  1006               	bcf	6,0	;volatile
   998  02A1                     l915:
   999                           
  1000                           ;./flex-lcd.h: 86: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  1001  02A1  3008               	movlw	8
  1002  02A2  0090               	movwf	??_Lcd_Init+1
  1003  02A3  3023               	movlw	35
  1004  02A4  008F               	movwf	??_Lcd_Init
  1005  02A5                     u437:
  1006  02A5  0B8F               	decfsz	??_Lcd_Init,f
  1007  02A6  2AA5               	goto	u437
  1008  02A7  0B90               	decfsz	??_Lcd_Init+1,f
  1009  02A8  2AA5               	goto	u437
  1010  02A9                     l917:
  1011  02A9  3028               	movlw	40
  1012  02AA  22B2               	fcall	_Lcd_Cmd
  1013  02AB                     l919:
  1014  02AB  3010               	movlw	16
  1015  02AC  22B2               	fcall	_Lcd_Cmd
  1016  02AD                     l921:
  1017  02AD  3001               	movlw	1
  1018  02AE  22B2               	fcall	_Lcd_Cmd
  1019  02AF                     l923:
  1020  02AF                     l925:
  1021  02AF  300F               	movlw	15
  1022  02B0  22B2               	fcall	_Lcd_Cmd
  1023  02B1                     l17:
  1024  02B1  0008               	return
  1025  02B2                     __end_of_Lcd_Init:
  1026                           
  1027                           	psect	text4
  1028  02B2                     __ptext4:	
  1029 ;; *************** function _Lcd_Cmd *****************
  1030 ;; Defined at:
  1031 ;;		line 150 in file "./flex-lcd.h"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;  data            1    wreg     unsigned char 
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;  data            1    2[BANK0 ] unsigned char 
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  1    wreg      void 
  1038 ;; Registers used:
  1039 ;;		wreg, status,2, status,0
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMMON   BANK0
  1045 ;;      Params:         0       0
  1046 ;;      Locals:         0       1
  1047 ;;      Temps:          0       2
  1048 ;;      Totals:         0       3
  1049 ;;Total ram usage:        3 bytes
  1050 ;; Hardware stack levels used: 1
  1051 ;; This function calls:
  1052 ;;		Nothing
  1053 ;; This function is called by:
  1054 ;;		_Lcd_Init
  1055 ;;		_Lcd_Out
  1056 ;;		_main
  1057 ;;		_Lcd_Out2
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061  02B2                     _Lcd_Cmd:	
  1062                           ;psect for function _Lcd_Cmd
  1063                           
  1064                           
  1065                           ;incstack = 0
  1066                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0]
  1067                           ;Lcd_Cmd@data stored from wreg
  1068  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  1069  02B3  008E               	movwf	Lcd_Cmd@data
  1070  02B4                     l839:
  1071                           
  1072                           ;./flex-lcd.h: 151: PORTBbits.RB7 = 0; PORTBbits.RB0 = 0;
  1073  02B4  1386               	bcf	6,7	;volatile
  1074  02B5  1006               	bcf	6,0	;volatile
  1075  02B6                     l841:
  1076                           
  1077                           ;./flex-lcd.h: 152: PORTBbits.RB4 = (data & 0b10000000)>>7; PORTBbits.RB3 = (data & 0b01
      +                          000000)>>6;
  1078  02B6  080E               	movf	Lcd_Cmd@data,w
  1079  02B7  008C               	movwf	??_Lcd_Cmd
  1080  02B8  3007               	movlw	7
  1081  02B9                     u165:
  1082  02B9  1003               	clrc
  1083  02BA  0C8C               	rrf	??_Lcd_Cmd,f
  1084  02BB  3EFF               	addlw	-1
  1085  02BC  1D03               	skipz
  1086  02BD  2AB9               	goto	u165
  1087  02BE  080C               	movf	??_Lcd_Cmd,w
  1088  02BF  3901               	andlw	1
  1089  02C0  008D               	movwf	??_Lcd_Cmd+1
  1090  02C1  0E8D               	swapf	??_Lcd_Cmd+1,f
  1091  02C2  0806               	movf	6,w	;volatile
  1092  02C3  060D               	xorwf	??_Lcd_Cmd+1,w
  1093  02C4  39EF               	andlw	-17
  1094  02C5  060D               	xorwf	??_Lcd_Cmd+1,w
  1095  02C6  0086               	movwf	6	;volatile
  1096  02C7  080E               	movf	Lcd_Cmd@data,w
  1097  02C8  008C               	movwf	??_Lcd_Cmd
  1098  02C9  3006               	movlw	6
  1099  02CA                     u175:
  1100  02CA  1003               	clrc
  1101  02CB  0C8C               	rrf	??_Lcd_Cmd,f
  1102  02CC  3EFF               	addlw	-1
  1103  02CD  1D03               	skipz
  1104  02CE  2ACA               	goto	u175
  1105  02CF  080C               	movf	??_Lcd_Cmd,w
  1106  02D0  3901               	andlw	1
  1107  02D1  008D               	movwf	??_Lcd_Cmd+1
  1108  02D2  0D8D               	rlf	??_Lcd_Cmd+1,f
  1109  02D3  0D8D               	rlf	??_Lcd_Cmd+1,f
  1110  02D4  0D8D               	rlf	??_Lcd_Cmd+1,f
  1111  02D5  0806               	movf	6,w	;volatile
  1112  02D6  060D               	xorwf	??_Lcd_Cmd+1,w
  1113  02D7  39F7               	andlw	-9
  1114  02D8  060D               	xorwf	??_Lcd_Cmd+1,w
  1115  02D9  0086               	movwf	6	;volatile
  1116                           
  1117                           ;./flex-lcd.h: 153: PORTBbits.RB2 = (data & 0b00100000)>>5; PORTBbits.RB1 = (data & 0b00
      +                          010000)>>4;
  1118  02DA  080E               	movf	Lcd_Cmd@data,w
  1119  02DB  008C               	movwf	??_Lcd_Cmd
  1120  02DC  3005               	movlw	5
  1121  02DD                     u185:
  1122  02DD  1003               	clrc
  1123  02DE  0C8C               	rrf	??_Lcd_Cmd,f
  1124  02DF  3EFF               	addlw	-1
  1125  02E0  1D03               	skipz
  1126  02E1  2ADD               	goto	u185
  1127  02E2  080C               	movf	??_Lcd_Cmd,w
  1128  02E3  3901               	andlw	1
  1129  02E4  008D               	movwf	??_Lcd_Cmd+1
  1130  02E5  0D8D               	rlf	??_Lcd_Cmd+1,f
  1131  02E6  0D8D               	rlf	??_Lcd_Cmd+1,f
  1132  02E7  0806               	movf	6,w	;volatile
  1133  02E8  060D               	xorwf	??_Lcd_Cmd+1,w
  1134  02E9  39FB               	andlw	-5
  1135  02EA  060D               	xorwf	??_Lcd_Cmd+1,w
  1136  02EB  0086               	movwf	6	;volatile
  1137  02EC  080E               	movf	Lcd_Cmd@data,w
  1138  02ED  008C               	movwf	??_Lcd_Cmd
  1139  02EE  3004               	movlw	4
  1140  02EF                     u195:
  1141  02EF  1003               	clrc
  1142  02F0  0C8C               	rrf	??_Lcd_Cmd,f
  1143  02F1  3EFF               	addlw	-1
  1144  02F2  1D03               	skipz
  1145  02F3  2AEF               	goto	u195
  1146  02F4  080C               	movf	??_Lcd_Cmd,w
  1147  02F5  3901               	andlw	1
  1148  02F6  008D               	movwf	??_Lcd_Cmd+1
  1149  02F7  0D8D               	rlf	??_Lcd_Cmd+1,f
  1150  02F8  0806               	movf	6,w	;volatile
  1151  02F9  060D               	xorwf	??_Lcd_Cmd+1,w
  1152  02FA  39FD               	andlw	-3
  1153  02FB  060D               	xorwf	??_Lcd_Cmd+1,w
  1154  02FC  0086               	movwf	6	;volatile
  1155  02FD                     l843:
  1156                           
  1157                           ;./flex-lcd.h: 154: _delay(10);
  1158  02FD  3003               	movlw	3
  1159  02FE  008C               	movwf	??_Lcd_Cmd
  1160  02FF                     u447:
  1161  02FF  0B8C               	decfsz	??_Lcd_Cmd,f
  1162  0300  2AFF               	goto	u447
  1163  0301                     l845:
  1164                           
  1165                           ;./flex-lcd.h: 155: PORTBbits.RB7 = 1; _delay((unsigned long)((5)*(4000000/4000000.0)));
      +                           PORTBbits.RB7 = 0;
  1166  0301  1283               	bcf	3,5	;RP0=0, select bank0
  1167  0302  1786               	bsf	6,7	;volatile
  1168  0303                     l847:
  1169  0303  2B04               	nop2	;2 cycle nop
  1170  0304  2B05               	nop2	;2 cycle nop
  1171  0305  0000               	nop
  1172  0306                     l849:
  1173  0306  1283               	bcf	3,5	;RP0=0, select bank0
  1174  0307  1386               	bcf	6,7	;volatile
  1175  0308                     l851:
  1176                           
  1177                           ;./flex-lcd.h: 156: PORTBbits.RB4 = (data & 0b00001000)>>3; PORTBbits.RB3 = (data & 0b00
      +                          000100)>>2;
  1178  0308  080E               	movf	Lcd_Cmd@data,w
  1179  0309  008C               	movwf	??_Lcd_Cmd
  1180  030A  3003               	movlw	3
  1181  030B                     u205:
  1182  030B  1003               	clrc
  1183  030C  0C8C               	rrf	??_Lcd_Cmd,f
  1184  030D  3EFF               	addlw	-1
  1185  030E  1D03               	skipz
  1186  030F  2B0B               	goto	u205
  1187  0310  080C               	movf	??_Lcd_Cmd,w
  1188  0311  3901               	andlw	1
  1189  0312  008D               	movwf	??_Lcd_Cmd+1
  1190  0313  0E8D               	swapf	??_Lcd_Cmd+1,f
  1191  0314  0806               	movf	6,w	;volatile
  1192  0315  060D               	xorwf	??_Lcd_Cmd+1,w
  1193  0316  39EF               	andlw	-17
  1194  0317  060D               	xorwf	??_Lcd_Cmd+1,w
  1195  0318  0086               	movwf	6	;volatile
  1196  0319                     l853:
  1197  0319  080E               	movf	Lcd_Cmd@data,w
  1198  031A  008C               	movwf	??_Lcd_Cmd
  1199  031B  3002               	movlw	2
  1200  031C                     u215:
  1201  031C  1003               	clrc
  1202  031D  0C8C               	rrf	??_Lcd_Cmd,f
  1203  031E  3EFF               	addlw	-1
  1204  031F  1D03               	skipz
  1205  0320  2B1C               	goto	u215
  1206  0321  080C               	movf	??_Lcd_Cmd,w
  1207  0322  3901               	andlw	1
  1208  0323  008D               	movwf	??_Lcd_Cmd+1
  1209  0324  0D8D               	rlf	??_Lcd_Cmd+1,f
  1210  0325  0D8D               	rlf	??_Lcd_Cmd+1,f
  1211  0326  0D8D               	rlf	??_Lcd_Cmd+1,f
  1212  0327  0806               	movf	6,w	;volatile
  1213  0328  060D               	xorwf	??_Lcd_Cmd+1,w
  1214  0329  39F7               	andlw	-9
  1215  032A  060D               	xorwf	??_Lcd_Cmd+1,w
  1216  032B  0086               	movwf	6	;volatile
  1217  032C                     l855:
  1218                           
  1219                           ;./flex-lcd.h: 157: PORTBbits.RB2 = (data & 0b00000010)>>1; PORTBbits.RB1 = (data & 0b00
      +                          000001);
  1220  032C  080E               	movf	Lcd_Cmd@data,w
  1221  032D  008C               	movwf	??_Lcd_Cmd
  1222  032E  1003               	clrc
  1223  032F  0C0C               	rrf	??_Lcd_Cmd,w
  1224  0330  3901               	andlw	1
  1225  0331  008D               	movwf	??_Lcd_Cmd+1
  1226  0332  0D8D               	rlf	??_Lcd_Cmd+1,f
  1227  0333  0D8D               	rlf	??_Lcd_Cmd+1,f
  1228  0334  0806               	movf	6,w	;volatile
  1229  0335  060D               	xorwf	??_Lcd_Cmd+1,w
  1230  0336  39FB               	andlw	-5
  1231  0337  060D               	xorwf	??_Lcd_Cmd+1,w
  1232  0338  0086               	movwf	6	;volatile
  1233  0339                     l857:
  1234  0339  080E               	movf	Lcd_Cmd@data,w
  1235  033A  3901               	andlw	1
  1236  033B  008C               	movwf	??_Lcd_Cmd
  1237  033C  0D8C               	rlf	??_Lcd_Cmd,f
  1238  033D  0806               	movf	6,w	;volatile
  1239  033E  060C               	xorwf	??_Lcd_Cmd,w
  1240  033F  39FD               	andlw	-3
  1241  0340  060C               	xorwf	??_Lcd_Cmd,w
  1242  0341  0086               	movwf	6	;volatile
  1243  0342                     l859:
  1244                           
  1245                           ;./flex-lcd.h: 158: _delay(10);
  1246  0342  3003               	movlw	3
  1247  0343  008C               	movwf	??_Lcd_Cmd
  1248  0344                     u457:
  1249  0344  0B8C               	decfsz	??_Lcd_Cmd,f
  1250  0345  2B44               	goto	u457
  1251  0346                     l861:
  1252                           
  1253                           ;./flex-lcd.h: 159: PORTBbits.RB7 = 1; _delay((unsigned long)((5)*(4000000/4000000.0)));
      +                           PORTBbits.RB7 = 0;
  1254  0346  1283               	bcf	3,5	;RP0=0, select bank0
  1255  0347  1786               	bsf	6,7	;volatile
  1256  0348                     l863:
  1257  0348  2B49               	nop2	;2 cycle nop
  1258  0349  2B4A               	nop2	;2 cycle nop
  1259  034A  0000               	nop
  1260  034B                     l865:
  1261  034B  1283               	bcf	3,5	;RP0=0, select bank0
  1262  034C  1386               	bcf	6,7	;volatile
  1263  034D                     l867:
  1264                           
  1265                           ;./flex-lcd.h: 160: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  1266  034D  3008               	movlw	8
  1267  034E  008D               	movwf	??_Lcd_Cmd+1
  1268  034F  3023               	movlw	35
  1269  0350  008C               	movwf	??_Lcd_Cmd
  1270  0351                     u467:
  1271  0351  0B8C               	decfsz	??_Lcd_Cmd,f
  1272  0352  2B51               	goto	u467
  1273  0353  0B8D               	decfsz	??_Lcd_Cmd+1,f
  1274  0354  2B51               	goto	u467
  1275  0355                     l49:
  1276  0355  0008               	return
  1277  0356                     __end_of_Lcd_Cmd:
  1278  004E                     btemp	set	78	;btemp
  1279  004E                     wtemp0	set	78
  1280                           
  1281                           	psect	idloc
  1282                           
  1283                           ;Config register IDLOC0 @ 0x2000
  1284                           ;	unspecified, using default values
  1285  2000                     	org	8192
  1286  2000  3FFF               	dw	16383
  1287                           
  1288                           ;Config register IDLOC1 @ 0x2001
  1289                           ;	unspecified, using default values
  1290  2001                     	org	8193
  1291  2001  3FFF               	dw	16383
  1292                           
  1293                           ;Config register IDLOC2 @ 0x2002
  1294                           ;	unspecified, using default values
  1295  2002                     	org	8194
  1296  2002  3FFF               	dw	16383
  1297                           
  1298                           ;Config register IDLOC3 @ 0x2003
  1299                           ;	unspecified, using default values
  1300  2003                     	org	8195
  1301  2003  3FFF               	dw	16383
  1302                           
  1303                           	psect	config
  1304                           
  1305                           ;Config register CONFIG @ 0x2007
  1306                           ;	Oscillator Selection bits
  1307                           ;	FOSC = EXTRC, RC oscillator
  1308                           ;	Watchdog Timer
  1309                           ;	WDTE = ON, WDT enabled
  1310                           ;	Power-up Timer Enable bit
  1311                           ;	PWRTE = OFF, Power-up Timer is disabled
  1312                           ;	Code Protection bit
  1313                           ;	CP = OFF, Code protection disabled
  1314  2007                     	org	8199
  1315  2007  3FFF               	dw	16383

Data Sizes:
    Strings     30
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            66     12      12

Pointer List with Targets:

    Lcd_Out@buffer	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_2(CODE[14]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Lcd_Out
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1327
                                              9 BANK0      3     3      0
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out                                              6     4      2     837
                                              3 BANK0      6     4      2
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     176
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             3     3      0     314
                                              3 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     176
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              40      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               42      C       C       3       18.2%
ABS                  0      0       0       4        0.0%
BITBANK0            42      0       0       5        0.0%
DATA                 0      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed May 25 19:26:58 2022

                      pc 0002                       l30 021B                       l15 0262  
                     l16 028B                       l17 02B1                       l46 03FD  
                     l49 0355                       fsr 0004                      l901 021C  
                    l911 0280                      l903 022A                      l841 02B6  
                    l921 02AD                      l913 0285                      l905 025F  
                    l851 0308                      l843 02FD                      l923 02AF  
                    l915 02A1                      l931 01DE                      l861 0346  
                    l853 0319                      l845 0301                      l925 02AF  
                    l917 02A9                      l909 0278                      l933 01E4  
                    l941 0206                      l863 0348                      l855 032C  
                    l847 0303                      l839 02B4                      l919 02AB  
                    l871 035A                      l943 0209                      l935 01EA  
                    l927 01D7                      l865 034B                      l857 0339  
                    l849 0306                      l881 03AC                      l873 03A1  
                    l945 020D                      l929 01D8                      l867 034D  
                    l859 0342                      l891 03EA                      l883 03BD  
                    l875 03A5                      l947 0212                      l939 01F0  
                    l893 03EC                      l885 03D0                      l877 03A7  
                    l869 0358                      l895 03EF                      l887 03DD  
                    l879 03AA                      l991 01AA                      l983 01A2  
                    l897 03F1                      l889 03E6                      l993 01B4  
                    l985 01A5                      l899 03F4                      l995 01BD  
                    l987 01A6                      l997 01C6                      l989 01A8  
                    u205 030B                      u215 031C                      u225 035D  
                    u235 036E                      u165 02B9                      u245 0381  
                    u317 01AF                      u175 02CA                      u407 0252  
                    u255 0393                      u327 01CD                      u280 028B  
                    u185 02DD                      u281 028A                      u417 025B  
                    u265 03AF                      u337 03A3                      u290 021B  
                    u195 02EF                      u427 027C                      u347 03E8  
                    u275 03C0                      u291 021A                      u437 02A5  
                    u357 03F9                      u447 02FF                      u367 022E  
                    u457 0344                      u377 0237                      u467 0351  
                    u387 0240                      u397 0249                      fsr0 0004  
                   l1029 01F8                     STR_1 0007                     STR_2 0017  
                   _main 01A2                     btemp 004E                     start 0000  
        __end_of_Lcd_Cmd 0356          __end_of_Lcd_Out 021C               _Lcd_Chr_CP 0356  
                  ?_main 000C                    _TRISB 0086                    pclath 000A  
                  status 0003                    wtemp0 004E         __end_of_Lcd_Init 02B2  
        __initialization 03FE             __end_of_main 01D5                   ??_main 0015  
              ??_Lcd_Cmd 000C                ??_Lcd_Out 0011              ?_Lcd_Chr_CP 000C  
__end_of__initialization 03FE                ?_Lcd_Init 000C               __pmaintext 01A2  
             ??_Lcd_Init 000F               __stringtab 0001                  _Lcd_Cmd 02B2  
                _Lcd_Out 01D5                  __ptext1 01D5                  __ptext2 0356  
                __ptext3 021C                  __ptext4 02B2     end_of_initialization 03FE  
           ??_Lcd_Chr_CP 000C                _PORTBbits 0006                _TRISBbits 0086  
     __end_of_Lcd_Chr_CP 03FE      start_initialization 03FE            Lcd_Out@buffer 0010  
              ___latbits 0000            __pcstackBANK0 000C                 ?_Lcd_Cmd 000C  
               ?_Lcd_Out 000F                __pstrings 0001                 Lcd_Out@x 000F  
               Lcd_Out@y 0013             Lcd_Init@data 0011              __stringbase 0006  
               _Lcd_Init 021C       __end_of__stringtab 0007           Lcd_Chr_CP@data 000E  
            Lcd_Cmd@data 000E              Lcd_Out@data 0014                stringcode 0001  
               stringdir 0001                 stringtab 0001  
